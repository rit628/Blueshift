name: ${PROJECT_NAME}

networks:
  default:
    name: ${NETWORK_NAME}

services:
  builder:
    privileged: true
    hostname: ${BUILD_CONTAINER_NAME}
    container_name: ${BUILD_CONTAINER_NAME}
    command: ["build", "-l"]
    build:
      context: .
      dockerfile: .docker/builder/Dockerfile
      args:
        - WORKDIR=${BUILD_MOUNT_DIR}
    image: ${BUILD_IMAGE_NAME}
    volumes:
      - .:${BUILD_MOUNT_DIR}
      - build:${BUILD_MOUNT_DIR}/build
    env_file:
      - .env

  synchronizer:
    volumes:
      - build:/data
      - ./${REMOTE_OUTPUT_DIRECTORY}:/copy
    build:
      context: .
      dockerfile: .docker/synchronizer/Dockerfile
    image: synchronizer
    command: ["-a", "--info=progress2", "/data/", "/copy/"]

  master:
    hostname: ${MASTER_HOSTNAME}
    container_name: ${MASTER_HOSTNAME}
    command: ${DEPLOY_SRC}
    build:
      context: .
      dockerfile: .docker/master/Dockerfile
      args:
        - WORKDIR=${MASTER_CONTAINER_WORKDIR}
    image: ${MASTER_IMAGE_NAME}
    volumes:
      - build:${MASTER_CONTAINER_WORKDIR}/build
      - ./samples/src:${MASTER_CONTAINER_WORKDIR}/samples/src
    expose:
      - ${MASTER_PORT}
    env_file:
      - .env
    depends_on:
      builder:
        condition: service_completed_successfully

  client:
    cap_add:
      - SYS_ADMIN
    build:
      context: .
      dockerfile: .docker/client/Dockerfile
      args:
        - WORKDIR=${CLIENT_CONTAINER_WORKDIR}
    image: ${CLIENT_IMAGE_NAME}
    volumes:
      - build:${CLIENT_CONTAINER_WORKDIR}/build
      - ./samples/client:${CLIENT_CONTAINER_WORKDIR}/samples/client
    deploy:
      mode: replicated
      replicas: ${NUM_CLIENTS}
    env_file:
      - .env
    depends_on:
      builder:
        condition: service_completed_successfully

volumes:
  build:
    name: ${PROJECT_PREFIX}_build