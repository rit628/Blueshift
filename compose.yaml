name: ${PROJECT_NAME}

networks:
  default:
    name: ${NETWORK_NAME}

services:
  builder:
    hostname: ${BUILD_CONTAINER_NAME}
    container_name: ${BUILD_CONTAINER_NAME}
    user: ${CONTAINER_UID}:${CONTAINER_GID}
    command: ["build", "-l", "-t", "${BUILD_TYPE}", "--sync", "${HOST_CWD}"]
    build:
      context: .
      dockerfile: .docker/builder/Dockerfile
      args:
        - WORKDIR=${CONTAINER_MOUNT_DIRECTORY}
        - CONTAINER_UID=${CONTAINER_UID}
        - CONTAINER_GID=${CONTAINER_GID}
    image: ${BUILD_IMAGE_NAME}
    volumes:
      - .:${CONTAINER_MOUNT_DIRECTORY}
      - ./${REMOTE_OUTPUT_DIRECTORY}:/remote
      - build:${CONTAINER_MOUNT_DIRECTORY}/build
    env_file:
      - .env

  debugger:
    profiles:
      - debug
    extends:
      service: builder
    user: 0:0
    command: ["debug", "--listen", "${DEBUG_PORT}", "--min-server-port", "${DEBUG_SERVER_PORT_MIN}", "--max-server-port", "${DEBUG_SERVER_PORT_MAX}", "all"]
    privileged: true
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp=unconfined
    hostname: ${DEBUG_CONTAINER_NAME}
    container_name: ${DEBUG_CONTAINER_NAME}
    ports:
      - ${DEBUG_PORT}:${DEBUG_PORT}
      - ${DEBUG_SERVER_PORT_MIN}-${DEBUG_SERVER_PORT_MAX}:${DEBUG_SERVER_PORT_MIN}-${DEBUG_SERVER_PORT_MAX}
    depends_on:
      builder:
        condition: service_completed_successfully

  master:
    hostname: ${MASTER_HOSTNAME}
    container_name: ${MASTER_HOSTNAME}
    command: ${DEPLOY_SRC}
    build:
      context: .
      dockerfile: .docker/master/Dockerfile
      args:
        - WORKDIR=${CONTAINER_MOUNT_DIRECTORY}
    image: ${MASTER_IMAGE_NAME}
    volumes:
      - build:${CONTAINER_MOUNT_DIRECTORY}/build
      - ./samples/src:${CONTAINER_MOUNT_DIRECTORY}/samples/src
    develop:
      watch:
        - action: sync+restart
          path: ${TARGET_OUTPUT_DIRECTORY}/${RUNTIME_OUTPUT_DIRECTORY}/master
          target: ${MASTER_PROGRAM_NAME}
    expose:
      - ${MASTER_PORT}
    pid: ${DEPLOY_NAMESPACE}
    environment:
      - DEPLOY_NAMESPACE=${DEPLOY_NAMESPACE}
    env_file:
      - .env
    depends_on:
      builder:
        condition: service_completed_successfully

  client:
    cap_add:
      - SYS_ADMIN
    build:
      context: .
      dockerfile: .docker/client/Dockerfile
      args:
        - WORKDIR=${CONTAINER_MOUNT_DIRECTORY}
    image: ${CLIENT_IMAGE_NAME}
    volumes:
      - build:${CONTAINER_MOUNT_DIRECTORY}/build
      - ./samples/client:${CONTAINER_MOUNT_DIRECTORY}/samples/client
    deploy:
      mode: replicated
      replicas: ${NUM_CLIENTS}
    develop:
      watch:
        - action: sync+restart
          path: ${TARGET_OUTPUT_DIRECTORY}/${RUNTIME_OUTPUT_DIRECTORY}/client
          target: ${CLIENT_PROGRAM_NAME}
    pid: ${DEPLOY_NAMESPACE}
    environment:
      - DEPLOY_NAMESPACE=${DEPLOY_NAMESPACE}
    env_file:
      - .env
    depends_on:
      builder:
        condition: service_completed_successfully

volumes:
  build:
    name: ${PROJECT_PREFIX}_build